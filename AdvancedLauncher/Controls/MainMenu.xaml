<UserControl x:Class="AdvancedLauncher.Controls.MainMenu"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             mc:Ignorable="d" 
             xmlns:Menu="clr-namespace:AdvancedLauncher.Controls"
             xmlns:Controls="clr-namespace:System.Windows.Controls;assembly=PresentationFramework"
             xmlns:env="clr-namespace:AdvancedLauncher.Environment"
             d:DesignHeight="300" d:DesignWidth="170"
             DataContext="{Binding Source={x:Static env:LanguageEnv.Strings}}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/AdvancedLauncher;component/Resources/Shared.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Controls:BooleanToVisibilityConverter x:Key="BoolToHiddenConverter" />

            <!-- #BB6DC6E8 / #FF69C2E4 -->
            <Color x:Key="NormalColor">#00FFFFFF</Color>
            <Color x:Key="HoverColor">#31FFFFFF</Color>
            <Color x:Key="PressedColor">#61FFFFFF</Color>
            <Color x:Key="PopupBackgroundColor">#DD5FACCA</Color>
            <Color x:Key="PopupBorderColor">Gray</Color>
            <Color x:Key="InnerFixColor">#FF5BA8C6</Color>
            <Color x:Key="InnerStrokeColor">#61FFFFFF</Color>
            <Color x:Key="InnerStrokeColorLow">#61AAAAAA</Color>

            <SolidColorBrush x:Key="NormalBrush" Color="{StaticResource NormalColor}" />
            <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}" />
            <SolidColorBrush x:Key="PressedBrush" Color="{StaticResource PressedColor}" />
            <SolidColorBrush x:Key="PopupBackgroundBrush" Color="{StaticResource PopupBackgroundColor}"/>
            <SolidColorBrush x:Key="PopupBorderBrush" Color="{StaticResource PopupBorderColor}"/>
            <SolidColorBrush x:Key="InnerFixBrush" Color="{StaticResource InnerFixColor}"/>
            <SolidColorBrush x:Key="InnerStrokeBrush" Color="{StaticResource InnerStrokeColor}" />
            <SolidColorBrush x:Key="InnerStrokeBrushLow" Color="{StaticResource InnerStrokeColorLow}" />

            <DropShadowEffect x:Key="ElemShadow" BlurRadius="3" Direction="0" ShadowDepth="0" />
            <Style x:Key="{x:Type ToggleButton}" TargetType="{x:Type ToggleButton}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="SnapsToDevicePixels" Value="False"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Height" Value="50" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid x:Name="Root" Background="Transparent">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding ElementName=Root, Path=ActualHeight}"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>

                                <!-- HIGHTLIGHT -->
                                <Border x:Name="HighLight" Grid.ColumnSpan="2" Grid.RowSpan="2" Opacity="0">
                                    <Border.OpacityMask>
                                        <LinearGradientBrush StartPoint="1,0" EndPoint="0,0">
                                            <GradientStop Color="#00000000" Offset="1"/>
                                            <GradientStop Color="#FF000000" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Border.OpacityMask>
                                    <Border Background="White">
                                        <Border.OpacityMask>
                                            <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                                <GradientStop Color="#00000000" Offset="1"/>
                                                <GradientStop Color="#FF000000" Offset="0"/>
                                            </LinearGradientBrush>
                                        </Border.OpacityMask>
                                    </Border>
                                </Border>

                                <!-- IMAGE - First border is fix for transparent background of ImageBrush -->
                                <Border Grid.RowSpan="2" Margin="5" CornerRadius="3" Background="White" />
                                <Border Grid.RowSpan="2" Margin="5" CornerRadius="3" BorderBrush="White" BorderThickness="2">
                                    <Border.Background>
                                        <ImageBrush ImageSource="{Binding Image}" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" TileMode="None" />
                                    </Border.Background>
                                </Border>

                                <!-- IMAGE - Text Info -->
                                <Grid Grid.Column="1" Background="Transparent">
                                    <Grid.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.65,0" EndPoint="0.75,0">
                                            <GradientStop Color="#00000000" Offset="1" />
                                            <GradientStop Color="#FF000000" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Grid.OpacityMask>
                                    <TextBlock 
                                           Margin="0" 
                                           Text="{Binding Name}" 
                                           Style="{StaticResource SubNavText}" 
                                           VerticalAlignment="Bottom" 
                                           TextAlignment="Left" />
                                </Grid>

                                <Grid Grid.Column="1" Grid.Row="1" Background="Transparent">
                                    <Grid.OpacityMask>
                                        <LinearGradientBrush StartPoint="0.65,0" EndPoint="0.75,0">
                                            <GradientStop Color="#00000000" Offset="1" />
                                            <GradientStop Color="#FF000000" Offset="0"/>
                                        </LinearGradientBrush>
                                    </Grid.OpacityMask>
                                    <TextBlock 
                                           Margin="0" 
                                           Text="{Binding GameType}"
                                           Style="{StaticResource SubNavText}" 
                                           VerticalAlignment="Top" 
                                           TextAlignment="Left" Width="100" />
                                </Grid>
                            </Grid>
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="PopupHoverUpTimeLine">
                                    <DoubleAnimation Storyboard.TargetName="HighLight" Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.1" />
                                </Storyboard>
                                <Storyboard x:Key="PopupHoverDownTimeLine">
                                    <DoubleAnimation Storyboard.TargetName="HighLight" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.1" />
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <ControlTemplate.Triggers>
                                <Trigger Property="ToggleButton.IsMouseOver" Value="True">
                                    <Trigger.EnterActions>
                                        <BeginStoryboard Storyboard="{StaticResource PopupHoverUpTimeLine}"/>
                                    </Trigger.EnterActions>
                                    <Trigger.ExitActions>
                                        <BeginStoryboard Storyboard="{StaticResource PopupHoverDownTimeLine}"/>
                                    </Trigger.ExitActions>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="Gray"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ListBox}" TargetType="ListBox">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBox">
                            <ScrollViewer Style="{StaticResource BlueScrollViewer}" Margin="0" Focusable="false">
                                    <StackPanel IsItemsHost="True" />
                                </ScrollViewer>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="{x:Type ListBoxItem}" TargetType="ListBoxItem">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="SnapsToDevicePixels" Value="true" />
                <Setter Property="OverridesDefaultStyle" Value="true" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <StackPanel>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="SelectionStates">
                                        <VisualState Name="Normal">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource NormalColor}" Duration="0:0:0.15"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Selected">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource PressedColor}" Duration="0:0:0.15"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource HoverColor}" Duration="0:0:0.15"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border" SnapsToDevicePixels="true" Background="Transparent">
                                    <ContentPresenter />
                                </Border>
                                <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource InnerStrokeBrushLow}" />
                                <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource InnerStrokeBrush}" />
                            </StackPanel>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ListItemTextBlock" TargetType="{x:Type TextBlock}">
                <Setter Property="SnapsToDevicePixels" Value="true"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="TextAlignment" Value="Left"/>
                <Setter Property="Margin" Value="3,0"/>
                <Setter Property="FontFamily" Value="Arial"/>
                <Setter Property="FontSize" Value="12"/>
                <Setter Property="Foreground" Value="White"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" BlurRadius="10" Color="#50FFFFFF" />
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="SnapsToDevicePixels" Value="False"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="FontSize" Value="12" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Height" Value="33"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="Common">
                                        <VisualState Name="Normal">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource NormalColor}" Duration="0:0:0.15"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource PressedColor}" Duration="0:0:0.15"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="{StaticResource HoverColor}" Duration="0:0:0.15"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Border" SnapsToDevicePixels="true" Background="Transparent">
                                    <TextBlock Margin="33,0,0,0" Style="{StaticResource ListItemTextBlock}" VerticalAlignment="Center">
                                        <ContentPresenter />
                                    </TextBlock>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>
    <Grid>
        <ToggleButton VerticalAlignment="Top" Name="ToggleButton" DataContext="{Binding ElementName=ProfileList, Path=SelectedValue}" ClickMode="Press" LostFocus="OnLostFocus"
            IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu:MainMenu}}, Path=IsOpened, Mode=TwoWay}">
            <ToggleButton.Triggers>
                <EventTrigger RoutedEvent="ToggleButton.Checked">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PopupRoot" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15" />
                            <DoubleAnimation Storyboard.TargetName="ToggleBtn" Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.15" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="ToggleButton.Unchecked">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="PopupRoot" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" />
                            <DoubleAnimation Storyboard.TargetName="ToggleBtn" Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.15" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PopupRoot" Storyboard.TargetProperty="(UIElement.Visibility)">
                                <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="{x:Static Visibility.Collapsed}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </ToggleButton.Triggers>
        </ToggleButton>
        <Grid Opacity="0" Visibility="Collapsed" x:Name="PopupRoot" Margin="0,50,3,0">
            <Border Background="{StaticResource PopupBackgroundBrush}" 
                    BorderThickness="1"
                    CornerRadius="5,0,5,5"
                    BorderBrush="{StaticResource PopupBorderBrush}">
                <StackPanel Margin="1,3">
                    <ListBox MaxHeight="282" 
                             SelectedIndex="0" 
                             x:Name="ProfileList" 
                             SelectionChanged="OnProfileSelectionChanged" 
                             ItemsSource="{Binding pCollection}"
                             Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu:MainMenu}}, Path=IsChangeEnabled, Converter={StaticResource BoolToHiddenConverter}}"
                             IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu:MainMenu}}, Path=IsChangeEnabled}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Height="33" Orientation="Horizontal">
                                        <Grid Width="25" Height="25" Margin="3">
                                            <Border CornerRadius="3" Background="White" />
                                            <Border CornerRadius="3" BorderBrush="White" BorderThickness="1">
                                                <Border.Background>
                                                    <ImageBrush ImageSource="{Binding Image}" Stretch="UniformToFill" RenderOptions.BitmapScalingMode="HighQuality" TileMode="None" />
                                                </Border.Background>
                                            </Border>
                                        </Grid>
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Name}" Style="{StaticResource ListItemTextBlock}" />
                                            <TextBlock Text="{Binding GameType}" FontSize="9" Style="{StaticResource ListItemTextBlock}" />
                                        </StackPanel>
                                    </StackPanel>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    <Grid Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu:MainMenu}}, Path=IsChangeEnabled, Converter={StaticResource BoolToHiddenConverter}}"
                          IsEnabled="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu:MainMenu}}, Path=IsChangeEnabled}">
                        <Button x:Name="Settings" Content="{Binding Settings}" Click="Settings_Click"/>
                        <Image IsHitTestVisible="False" Margin="3,0,0,0" Width="25" Height="25" HorizontalAlignment="Left" Source="/AdvancedLauncher;component/Resources/Icons/Configuration.png" Stretch="UniformToFill" />
                    </Grid>
                        <TextBlock Margin="5,10"
                                   TextAlignment="Center"
                                   Text="{Binding WaitForComplete}"
                                   Style="{StaticResource ListItemTextBlock}"
                                   TextWrapping="Wrap"
                                   Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type Menu:MainMenu}}, Path=IsChangeDisabled, Converter={StaticResource BoolToHiddenConverter}}"/>
                    <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource InnerStrokeBrushLow}" />
                    <Rectangle Height="1" VerticalAlignment="Bottom" Fill="{StaticResource InnerStrokeBrush}" />
                    <Grid>
                        <Button x:Name="About" Content="{Binding About}" Click="About_Click" />
                        <Image IsHitTestVisible="False" Margin="3,0,0,0" Width="25" Height="25" HorizontalAlignment="Left" Source="/AdvancedLauncher;component/Resources/Icons/Info.png" Stretch="UniformToFill" />
                    </Grid>
                </StackPanel>
            </Border>
            <Border IsHitTestVisible="False"
                    x:Name="BorderInner"
                    CornerRadius="4,0,4,4"
                    Background="Transparent"
                    Margin="1"
                    BorderBrush="{StaticResource InnerStrokeBrush}"
                    BorderThickness="1" />
        </Grid>
        <Grid IsHitTestVisible="False" x:Name="ToggleBtn" Width="28" Height="51" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,3,0" Opacity="0">
            <Border BorderBrush="{StaticResource PopupBorderBrush}" 
                    Background="{StaticResource PopupBackgroundBrush}" 
                    BorderThickness="1,0">
                <Border.OpacityMask>
                    <LinearGradientBrush  StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#00000000" Offset="0.2"/>
                        <GradientStop Color="#FF000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>
            <Border BorderBrush="{StaticResource InnerStrokeBrush}" 
                    Background="Transparent"
                    Margin="1,0,1,0"
                    BorderThickness="1,0">
                <Border.OpacityMask>
                    <LinearGradientBrush  StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#00000000" Offset="0.2"/>
                        <GradientStop Color="#FF000000" Offset="1"/>
                    </LinearGradientBrush>
                </Border.OpacityMask>
            </Border>
            <Grid Margin="2,0,2,-1" Background="{StaticResource InnerFixBrush}" Height="2" VerticalAlignment="Bottom"/>
        </Grid>
        <Path IsHitTestVisible="False" Margin="0,16,6,0" Data="M 3 7 L 9 13 L 15 7 L 12 7 L 9 10 L 6 7 Z" Width="20" Height="20" Fill="White" HorizontalAlignment="Right" VerticalAlignment="Top"/>
    </Grid>
</UserControl>
